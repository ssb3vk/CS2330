# Test vectors for control signals logic
Reset Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Load instruction
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     1    0     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     1    0     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# D0 ← [MAR]
0     1     1    0     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    0    0   0   1   0    0    0   0   0   0    0  0
0     0     1    0     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    0    0   0   1   0    0    0   0   0   0    0  0
# Store instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    1     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    1     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# [MAR] ← [D0]
0     1     0    1     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 0    1     0    0    0   0   0   0    0    0   0   1   0    0  0
0     0     0    1     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 0    1     0    0    0   0   0   0    0    0   0   1   0    0  0
# Add instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
# D0 ← [ALU]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
# Sub instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   1   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   1   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  1
0     0     0    0     0   1   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  1
# D0 ← [ALU]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
0     0     0    0     0   1   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
# Inc instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     1    0     0   0   1   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     1    0     0   0   1   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     0   0   1   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   1   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     0   0   1   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  0
0     0     0    0     0   0   1   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  0
# D0 ← [ALU]
0     1     0    0     0   0   1   0   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   1   0   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
# Dec instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   0   0   1   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   1   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  1
0     0     0    0     0   0   0   1   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  1
# D0 ← [ALU]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   1   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
# Branch instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# PC ← [IR]
0     1     0    0     0   0   0   0   1   0   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   0   0   0   1   0   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
# To test the Beq (Branch equal to zero) instruction, an arithmetic instruction must first be executed that produces a result of zero.
# We can emulate this using the test vectors for an add instruction, but for T6 = 1 setting Z = 1 to indicate that the ALU produced a 
# results of zero. This bit is latched and then subsequently used by the Beq instruction to generate the appropriate control signals.
# Add instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  1 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  1 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
# D0 ← [ALU]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
# Branch equal instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# PC ← [IR]
0     1     0    0     0   0   0   0   0   1   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   0   0   0   0   1   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
