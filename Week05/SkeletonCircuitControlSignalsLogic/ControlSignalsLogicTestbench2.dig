<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Read</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Reset</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Clock</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Load</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Store</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Add</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sub</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Inc</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Dec</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Bra</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Beq</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T0</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T1</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="640"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T2</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="680"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T3</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="720"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T4</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T5</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T6</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="840"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>T7</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="880"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Z</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Write</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Cmar</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Cmbr</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Embr</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Cir</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Eir</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Cpc</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Epc</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Cd0</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Ed0</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Calu</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="640"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Ealu</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="680"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>F0</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="720"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>F1</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString># Test vectors for control signals logic
Reset Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Load instruction
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     1    0     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     1    0     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# D0 ← [MAR]
0     1     1    0     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    0    0   0   1   0    0    0   0   0   0    0  0
0     0     1    0     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    0    0   0   1   0    0    0   0   0   0    0  0
# Store instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    1     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    1     0   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# [MAR] ← [D0]
0     1     0    1     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 0    1     0    0    0   0   0   0    0    0   0   1   0    0  0
0     0     0    1     0   0   0   0   0   0   0  0  0  0  0  1  0  0  0 0    1     0    0    0   0   0   0    0    0   0   1   0    0  0
# Add instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
# D0 ← [ALU]
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
# Sub instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   1   0   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   1   0   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  1
0     0     0    0     0   1   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  1
# D0 ← [ALU]
0     1     0    0     0   1   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
0     0     0    0     0   1   0   0   0   0   0  0  0  0  0  0  0  1  0 0    0     0    0    0   0   1   0    0    0   0   0   1    0  0
# Inc instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     1    0     0   0   1   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     1    0     0   0   1   0   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     0   0   1   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   1   0   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     0   0   1   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  0
0     0     0    0     0   0   1   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  0
# D0 ← [ALU]
0     1     0    0     0   0   1   0   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   1   0   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
# Dec instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# MAR ← [IR]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   0   0   1   0   0   0  0  0  0  1  0  0  0  0 0    0     1    0    0   0   0   0    0    0   1   0   0    0  0
# MBR ← [MAR]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   1   0   0   0  0  0  0  0  1  0  0  0 1    0     0    1    0   0   0   0    0    0   0   0   0    0  0
# ALU (P) ← [MBR]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  1
0     0     0    0     0   0   0   1   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    1  1
# D0 ← [ALU]
0     1     0    0     0   0   0   1   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   1   0   0   0  0  0  0  0  0  0  1  0 0    1     0    0    0   0   0   0    0    0   0   0   1    0  0
# Branch instruction
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# PC ← [IR]
0     1     0    0     0   0   0   0   1   0   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   0   0   0   1   0   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
# To test the Beq (Branch equal to zero) instruction, we must use test vectors that assign Z = 0 and Z = 1.
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Z = 1
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  1 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  1 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
# Branch equal instruction
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# PC ← [IR]
0     1     0    0     0   0   0   0   0   1   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
0     0     0    0     0   0   0   0   0   1   0  0  0  0  1  0  0  0  0 0    0     0    0    1   0   0   0    0    0   1   0   0    0  0
# Rst Clock Load Store Add Sub Inc Dec Bra Beq T0 T1 T2 T3 T4 T5 T6 T7 Z Read Write Cmar Cmbr Cpc Cir Cd0 Calu Embr Epc Eir Ed0 Ealu F1 F0
# Z = 0
0     1     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
0     0     0    0     1   0   0   0   0   0   0  0  0  0  0  0  1  0  0 0    0     0    0    0   0   0   1    1    0   0   0   0    0  0
# Branch equal instruction
# Fetch: MAR ← [PC]
0     1     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   1  0  0  0  0  0  0  0  0 0    0     1    0    0   0   0   0    0    1   0   0   0    0  0
# IR ← [MAR]
0     1     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   0   0  1  0  0  0  0  0  0  0 1    0     0    0    0   1   0   0    0    0   0   0   0    0  0
# ALU (Q) ← [PC]
0     1     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
0     0     0    0     0   0   0   0   0   0   0  0  1  0  0  0  0  0  0 0    0     0    0    0   0   0   1    0    1   0   0   0    1  0
# PC ← [ALU]
0     1     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
0     0     0    0     0   0   0   0   0   0   0  0  0  1  0  0  0  0  0 0    0     0    0    1   0   0   0    0    0   0   0   1    0  0
# PC ← [IR]
0     1     0    0     0   0   0   0   0   1   0  0  0  0  1  0  0  0  0 0    0     0    0    0   0   0   0    0    0   0   0   0    0  0
0     0     0    0     0   0   0   0   0   1   0  0  0  0  1  0  0  0  0 0    0     0    0    0   0   0   0    0    0   0   0   0    0  0
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="360" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>ControlSignalsLogic.dig</elementName>
      <elementAttributes/>
      <pos x="320" y="200"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="-60" y="320"/>
      <p2 x="0" y="320"/>
    </wire>
    <wire>
      <p1 x="60" y="320"/>
      <p2 x="320" y="320"/>
    </wire>
    <wire>
      <p1 x="760" y="320"/>
      <p2 x="820" y="320"/>
    </wire>
    <wire>
      <p1 x="520" y="320"/>
      <p2 x="700" y="320"/>
    </wire>
    <wire>
      <p1 x="-60" y="640"/>
      <p2 x="160" y="640"/>
    </wire>
    <wire>
      <p1 x="600" y="640"/>
      <p2 x="820" y="640"/>
    </wire>
    <wire>
      <p1 x="0" y="260"/>
      <p2 x="320" y="260"/>
    </wire>
    <wire>
      <p1 x="520" y="260"/>
      <p2 x="760" y="260"/>
    </wire>
    <wire>
      <p1 x="520" y="200"/>
      <p2 x="820" y="200"/>
    </wire>
    <wire>
      <p1 x="-60" y="200"/>
      <p2 x="320" y="200"/>
    </wire>
    <wire>
      <p1 x="-60" y="520"/>
      <p2 x="100" y="520"/>
    </wire>
    <wire>
      <p1 x="260" y="520"/>
      <p2 x="320" y="520"/>
    </wire>
    <wire>
      <p1 x="660" y="520"/>
      <p2 x="820" y="520"/>
    </wire>
    <wire>
      <p1 x="-60" y="840"/>
      <p2 x="260" y="840"/>
    </wire>
    <wire>
      <p1 x="200" y="460"/>
      <p2 x="320" y="460"/>
    </wire>
    <wire>
      <p1 x="520" y="460"/>
      <p2 x="560" y="460"/>
    </wire>
    <wire>
      <p1 x="-60" y="400"/>
      <p2 x="40" y="400"/>
    </wire>
    <wire>
      <p1 x="140" y="400"/>
      <p2 x="320" y="400"/>
    </wire>
    <wire>
      <p1 x="720" y="400"/>
      <p2 x="820" y="400"/>
    </wire>
    <wire>
      <p1 x="520" y="400"/>
      <p2 x="620" y="400"/>
    </wire>
    <wire>
      <p1 x="-60" y="720"/>
      <p2 x="200" y="720"/>
    </wire>
    <wire>
      <p1 x="560" y="720"/>
      <p2 x="820" y="720"/>
    </wire>
    <wire>
      <p1 x="80" y="340"/>
      <p2 x="320" y="340"/>
    </wire>
    <wire>
      <p1 x="520" y="340"/>
      <p2 x="680" y="340"/>
    </wire>
    <wire>
      <p1 x="-60" y="280"/>
      <p2 x="-20" y="280"/>
    </wire>
    <wire>
      <p1 x="20" y="280"/>
      <p2 x="320" y="280"/>
    </wire>
    <wire>
      <p1 x="780" y="280"/>
      <p2 x="820" y="280"/>
    </wire>
    <wire>
      <p1 x="520" y="280"/>
      <p2 x="740" y="280"/>
    </wire>
    <wire>
      <p1 x="-60" y="600"/>
      <p2 x="140" y="600"/>
    </wire>
    <wire>
      <p1 x="620" y="600"/>
      <p2 x="820" y="600"/>
    </wire>
    <wire>
      <p1 x="-60" y="920"/>
      <p2 x="300" y="920"/>
    </wire>
    <wire>
      <p1 x="-40" y="220"/>
      <p2 x="320" y="220"/>
    </wire>
    <wire>
      <p1 x="520" y="220"/>
      <p2 x="800" y="220"/>
    </wire>
    <wire>
      <p1 x="280" y="540"/>
      <p2 x="320" y="540"/>
    </wire>
    <wire>
      <p1 x="-60" y="480"/>
      <p2 x="80" y="480"/>
    </wire>
    <wire>
      <p1 x="220" y="480"/>
      <p2 x="320" y="480"/>
    </wire>
    <wire>
      <p1 x="680" y="480"/>
      <p2 x="820" y="480"/>
    </wire>
    <wire>
      <p1 x="520" y="480"/>
      <p2 x="540" y="480"/>
    </wire>
    <wire>
      <p1 x="-60" y="800"/>
      <p2 x="240" y="800"/>
    </wire>
    <wire>
      <p1 x="160" y="420"/>
      <p2 x="320" y="420"/>
    </wire>
    <wire>
      <p1 x="520" y="420"/>
      <p2 x="600" y="420"/>
    </wire>
    <wire>
      <p1 x="-60" y="360"/>
      <p2 x="20" y="360"/>
    </wire>
    <wire>
      <p1 x="100" y="360"/>
      <p2 x="320" y="360"/>
    </wire>
    <wire>
      <p1 x="740" y="360"/>
      <p2 x="820" y="360"/>
    </wire>
    <wire>
      <p1 x="520" y="360"/>
      <p2 x="660" y="360"/>
    </wire>
    <wire>
      <p1 x="-60" y="680"/>
      <p2 x="180" y="680"/>
    </wire>
    <wire>
      <p1 x="580" y="680"/>
      <p2 x="820" y="680"/>
    </wire>
    <wire>
      <p1 x="40" y="300"/>
      <p2 x="320" y="300"/>
    </wire>
    <wire>
      <p1 x="520" y="300"/>
      <p2 x="720" y="300"/>
    </wire>
    <wire>
      <p1 x="-60" y="240"/>
      <p2 x="-40" y="240"/>
    </wire>
    <wire>
      <p1 x="-20" y="240"/>
      <p2 x="320" y="240"/>
    </wire>
    <wire>
      <p1 x="800" y="240"/>
      <p2 x="820" y="240"/>
    </wire>
    <wire>
      <p1 x="520" y="240"/>
      <p2 x="780" y="240"/>
    </wire>
    <wire>
      <p1 x="-60" y="560"/>
      <p2 x="120" y="560"/>
    </wire>
    <wire>
      <p1 x="300" y="560"/>
      <p2 x="320" y="560"/>
    </wire>
    <wire>
      <p1 x="640" y="560"/>
      <p2 x="820" y="560"/>
    </wire>
    <wire>
      <p1 x="-60" y="880"/>
      <p2 x="280" y="880"/>
    </wire>
    <wire>
      <p1 x="240" y="500"/>
      <p2 x="320" y="500"/>
    </wire>
    <wire>
      <p1 x="-60" y="440"/>
      <p2 x="60" y="440"/>
    </wire>
    <wire>
      <p1 x="180" y="440"/>
      <p2 x="320" y="440"/>
    </wire>
    <wire>
      <p1 x="700" y="440"/>
      <p2 x="820" y="440"/>
    </wire>
    <wire>
      <p1 x="520" y="440"/>
      <p2 x="580" y="440"/>
    </wire>
    <wire>
      <p1 x="-60" y="760"/>
      <p2 x="220" y="760"/>
    </wire>
    <wire>
      <p1 x="540" y="760"/>
      <p2 x="820" y="760"/>
    </wire>
    <wire>
      <p1 x="120" y="380"/>
      <p2 x="320" y="380"/>
    </wire>
    <wire>
      <p1 x="520" y="380"/>
      <p2 x="640" y="380"/>
    </wire>
    <wire>
      <p1 x="0" y="260"/>
      <p2 x="0" y="320"/>
    </wire>
    <wire>
      <p1 x="640" y="380"/>
      <p2 x="640" y="560"/>
    </wire>
    <wire>
      <p1 x="260" y="520"/>
      <p2 x="260" y="840"/>
    </wire>
    <wire>
      <p1 x="580" y="440"/>
      <p2 x="580" y="680"/>
    </wire>
    <wire>
      <p1 x="200" y="460"/>
      <p2 x="200" y="720"/>
    </wire>
    <wire>
      <p1 x="140" y="400"/>
      <p2 x="140" y="600"/>
    </wire>
    <wire>
      <p1 x="780" y="240"/>
      <p2 x="780" y="280"/>
    </wire>
    <wire>
      <p1 x="80" y="340"/>
      <p2 x="80" y="480"/>
    </wire>
    <wire>
      <p1 x="720" y="300"/>
      <p2 x="720" y="400"/>
    </wire>
    <wire>
      <p1 x="-20" y="240"/>
      <p2 x="-20" y="280"/>
    </wire>
    <wire>
      <p1 x="20" y="280"/>
      <p2 x="20" y="360"/>
    </wire>
    <wire>
      <p1 x="660" y="360"/>
      <p2 x="660" y="520"/>
    </wire>
    <wire>
      <p1 x="280" y="540"/>
      <p2 x="280" y="880"/>
    </wire>
    <wire>
      <p1 x="600" y="420"/>
      <p2 x="600" y="640"/>
    </wire>
    <wire>
      <p1 x="220" y="480"/>
      <p2 x="220" y="760"/>
    </wire>
    <wire>
      <p1 x="540" y="480"/>
      <p2 x="540" y="760"/>
    </wire>
    <wire>
      <p1 x="160" y="420"/>
      <p2 x="160" y="640"/>
    </wire>
    <wire>
      <p1 x="800" y="220"/>
      <p2 x="800" y="240"/>
    </wire>
    <wire>
      <p1 x="100" y="360"/>
      <p2 x="100" y="520"/>
    </wire>
    <wire>
      <p1 x="740" y="280"/>
      <p2 x="740" y="360"/>
    </wire>
    <wire>
      <p1 x="-40" y="220"/>
      <p2 x="-40" y="240"/>
    </wire>
    <wire>
      <p1 x="40" y="300"/>
      <p2 x="40" y="400"/>
    </wire>
    <wire>
      <p1 x="680" y="340"/>
      <p2 x="680" y="480"/>
    </wire>
    <wire>
      <p1 x="300" y="560"/>
      <p2 x="300" y="920"/>
    </wire>
    <wire>
      <p1 x="620" y="400"/>
      <p2 x="620" y="600"/>
    </wire>
    <wire>
      <p1 x="240" y="500"/>
      <p2 x="240" y="800"/>
    </wire>
    <wire>
      <p1 x="560" y="460"/>
      <p2 x="560" y="720"/>
    </wire>
    <wire>
      <p1 x="180" y="440"/>
      <p2 x="180" y="680"/>
    </wire>
    <wire>
      <p1 x="760" y="260"/>
      <p2 x="760" y="320"/>
    </wire>
    <wire>
      <p1 x="120" y="380"/>
      <p2 x="120" y="560"/>
    </wire>
    <wire>
      <p1 x="700" y="320"/>
      <p2 x="700" y="440"/>
    </wire>
    <wire>
      <p1 x="60" y="320"/>
      <p2 x="60" y="440"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>